{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mamad/paractice/react/burger-builder-1.0/src/Components/Burger/Burger.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\nimport classes from './Burger.module.css';\nimport Aux from '../../hoc/Aux';\n\nconst Burger = props => {\n  _s();\n\n  const ingredients_arr = Object.keys(props.ingredients).map(ingrKey => {\n    return [...Array(props.ingredients[ingrKey])].map((_, idx) => {\n      return /*#__PURE__*/_jsxDEV(BurgerIngredient, {\n        type: ingrKey\n      }, ingrKey + idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 20\n      }, this);\n    });\n  }).reduce((prevVal, currVal) => {\n    return prevVal.concat(currVal);\n  }, []); // Another Approach would be to use the flat() method which works as well\n  // const ingredients_arr = Object.keys(props.ingredients).map(ingrKey => {\n  //     return [...Array(props.ingredients[ingrKey])].map((_, idx) => {\n  //         return <BurgerIngredient key={ingrKey + idx} type={ingrKey} />\n  //     });\n  // }).flat();\n\n  let burgerIngredients = null;\n\n  if (ingredients_arr.length === 0) {\n    burgerIngredients = /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"You Just Want Buns?!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Add your ingredients down below in the Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  } else {\n    burgerIngredients = [...ingredients_arr];\n  }\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Burger,\n    children: [/*#__PURE__*/_jsxDEV(BurgerIngredient, {\n      type: \"bread-top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), burgerIngredients, /*#__PURE__*/_jsxDEV(BurgerIngredient, {\n      type: \"bread-bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Burger, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Burger;\nBurger.propTypes = {\n  ingredients: PropTypes.object.isRequired\n};\nexport default Burger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Burger\");","map":{"version":3,"sources":["/home/mamad/paractice/react/burger-builder-1.0/src/Components/Burger/Burger.js"],"names":["React","useEffect","PropTypes","BurgerIngredient","classes","Aux","Burger","props","ingredients_arr","Object","keys","ingredients","map","ingrKey","Array","_","idx","reduce","prevVal","currVal","concat","burgerIngredients","length","propTypes","object","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA;;AAEpB,QAAMC,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,WAAlB,EAA+BC,GAA/B,CAAmCC,OAAO,IAAI;AAClE,WAAO,CAAC,GAAGC,KAAK,CAACP,KAAK,CAACI,WAAN,CAAkBE,OAAlB,CAAD,CAAT,EAAuCD,GAAvC,CAA2C,CAACG,CAAD,EAAIC,GAAJ,KAAY;AAC1D,0BAAO,QAAC,gBAAD;AAAsC,QAAA,IAAI,EAAEH;AAA5C,SAAuBA,OAAO,GAAGG,GAAjC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,CAAP;AAGH,GAJuB,EAIrBC,MAJqB,CAId,CAACC,OAAD,EAAUC,OAAV,KAAsB;AAC5B,WAAOD,OAAO,CAACE,MAAR,CAAeD,OAAf,CAAP;AACH,GANuB,EAMrB,EANqB,CAAxB,CAFoB,CAUpB;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAIE,iBAAiB,GAAG,IAAxB;;AAEA,MAAGb,eAAe,CAACc,MAAhB,KAA2B,CAA9B,EAAiC;AAC7BD,IAAAA,iBAAiB,gBACb,QAAC,GAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPD,MAOO;AACHA,IAAAA,iBAAiB,GAAG,CAAC,GAAGb,eAAJ,CAApB;AACH;;AAEDP,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;AAKA,sBAEI;AAAK,IAAA,SAAS,EAAEG,OAAO,CAACE,MAAxB;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGe,iBAFH,eAGE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAUH,CA9CD;;GAAMf,M;;KAAAA,M;AAgDNA,MAAM,CAACiB,SAAP,GAAmB;AACfZ,EAAAA,WAAW,EAAET,SAAS,CAACsB,MAAV,CAAiBC;AADf,CAAnB;AAIA,eAAenB,MAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\nimport classes from './Burger.module.css';\nimport Aux from '../../hoc/Aux';\n\nconst Burger = props => {\n\n    const ingredients_arr = Object.keys(props.ingredients).map(ingrKey => {\n        return [...Array(props.ingredients[ingrKey])].map((_, idx) => {\n            return <BurgerIngredient key={ingrKey + idx} type={ingrKey} />\n        });\n    }).reduce((prevVal, currVal) => {\n        return prevVal.concat(currVal);\n    }, []);\n\n    // Another Approach would be to use the flat() method which works as well\n    // const ingredients_arr = Object.keys(props.ingredients).map(ingrKey => {\n    //     return [...Array(props.ingredients[ingrKey])].map((_, idx) => {\n    //         return <BurgerIngredient key={ingrKey + idx} type={ingrKey} />\n    //     });\n    // }).flat();\n\n\n    let burgerIngredients = null;\n    \n    if(ingredients_arr.length === 0) {\n        burgerIngredients = (\n            <Aux>\n                <h3>You Just Want Buns?!</h3>\n                <h4>Add your ingredients down below in the Controls</h4>\n            </Aux>\n        );\n    } else {\n        burgerIngredients = [...ingredients_arr];\n    }\n\n    useEffect(() => {\n        \n    }, []);\n\n\n    return (\n      \n        <div className={classes.Burger}>\n          <BurgerIngredient type=\"bread-top\" />\n          {burgerIngredients}\n          <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n      \n    );\n\n}\n\nBurger.propTypes = {\n    ingredients: PropTypes.object.isRequired,\n}\n\nexport default Burger;"]},"metadata":{},"sourceType":"module"}