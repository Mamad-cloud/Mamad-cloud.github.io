{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mamad/paractice/react/burger-builder-1.0/src/Containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\nimport Aux from '../../hoc/Aux';\nimport Burger from './../../Components/Burger/Burger';\nconst INGGREDIENT_PRICES = {\n  salad: 1.3,\n  bacon: 0.9,\n  cheese: 0.3,\n  meat: 2.6\n};\n\nclass BurgerBuilder extends Component {\n  constructor(props) {\n    super(props); //console.log('[BurgerBuilder.js] -> constructor() - 1');\n\n    this.addIngredientHandler = type => {\n      const ingredients = { ...this.state.ingredients\n      };\n      ingredients[type] += 1; //#region other soulution\n      //const updatedIngredients = {...Ingredients};\n      // const oldCount = this.state.ingredients[type];\n      // const updatedCount = oldCount + 1;\n      // const updatedIngredients = {...this.state.ingredients};\n      // updatedIngredients[type] = updatedCount;\n      //#endregion\n\n      const priceAddition = INGGREDIENT_PRICES[type];\n      const totalPrice = this.state.burgerPrice + priceAddition;\n      this.setState({\n        ingredients: ingredients,\n        burgerPrice: totalPrice\n      });\n    };\n\n    this.removeIngredientHandler = type => {\n      const ingredients = { ...this.state.ingredients\n      };\n      let totalPrice = this.state.burgerPrice;\n      const subtractedPrice = INGGREDIENT_PRICES[type];\n\n      if (ingredients[type] > 0) {\n        ingredients[type] -= 1;\n        totalPrice -= subtractedPrice;\n      } else {\n        ingredients[type] = 0;\n      } // ingredients[type] > 0 ? ingredients[type] -= 1 : ingredients[type] = 0;\n      // const subtractedPrice = INGGREDIENT_PRICES[type];\n      // const totalPrice = this.state.burgerPrice - subtractedPrice;\n\n\n      this.setState({\n        ingredients: ingredients,\n        burgerPrice: totalPrice\n      });\n    };\n\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      burgerPrice: 3,\n      purchasable: false\n    };\n  } //#region event Handlers\n\n\n  //#endregion\n  render() {\n    //console.log('[BurgerBuilder.js] -> render() - 2');\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      if (disabledInfo[key] <= 0) {\n        disabledInfo[key] = true;\n      } else {\n        disabledInfo[key] = false;\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n        removeIngredient: this.removeIngredientHandler,\n        addIngredient: this.addIngredientHandler,\n        disabledInfo: disabledInfo,\n        price: this.state.burgerPrice,\n        purchasable: this.state.purchasable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this);\n  }\n\n  componentDidMount() {//console.log('[BurgerBuilder.js] -> componentDidMount() - 3');\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    //console.log('[BurgerBuilder.js] shouldComponentUpdate()');\n    //console.log(prevProps);\n    return true;\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/mamad/paractice/react/burger-builder-1.0/src/Containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","BuildControls","Aux","Burger","INGGREDIENT_PRICES","salad","bacon","cheese","meat","BurgerBuilder","constructor","props","addIngredientHandler","type","ingredients","state","priceAddition","totalPrice","burgerPrice","setState","removeIngredientHandler","subtractedPrice","purchasable","render","disabledInfo","key","componentDidMount","shouldComponentUpdate","prevProps","prevState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\nimport Aux from '../../hoc/Aux';\nimport Burger from './../../Components/Burger/Burger';\n\nconst INGGREDIENT_PRICES = {\n    salad: 1.3,\n    bacon: 0.9,\n    cheese: 0.3,\n    meat: 2.6,\n}\n\nclass BurgerBuilder extends Component {\n\n    constructor(props) {\n        super(props);\n        //console.log('[BurgerBuilder.js] -> constructor() - 1');\n\n        this.state = {\n            ingredients: {\n\n                salad: 0,\n                bacon: 0,\n                cheese: 0,\n                meat : 0,\n                \n            },\n            burgerPrice: 3,\n            purchasable: false,\n        }\n    }\n\n    //#region event Handlers\n\n    addIngredientHandler = (type) => {\n        const ingredients = {...this.state.ingredients};\n        ingredients[type] += 1;\n        //#region other soulution\n\n        //const updatedIngredients = {...Ingredients};\n        // const oldCount = this.state.ingredients[type];\n        // const updatedCount = oldCount + 1;\n        // const updatedIngredients = {...this.state.ingredients};\n        // updatedIngredients[type] = updatedCount;\n        //#endregion\n        const priceAddition = INGGREDIENT_PRICES[type];\n        const totalPrice = this.state.burgerPrice + priceAddition;\n        this.setState({ ingredients: ingredients, burgerPrice: totalPrice });\n\n    }\n\n\n    removeIngredientHandler = (type) => {\n        const ingredients = {...this.state.ingredients};\n        let totalPrice = this.state.burgerPrice;\n        const subtractedPrice = INGGREDIENT_PRICES[type];\n        if (ingredients[type] > 0 ) {\n            ingredients[type] -= 1;\n            totalPrice -= subtractedPrice;\n        } else {\n            ingredients[type] = 0;\n        }\n        // ingredients[type] > 0 ? ingredients[type] -= 1 : ingredients[type] = 0;\n        // const subtractedPrice = INGGREDIENT_PRICES[type];\n        // const totalPrice = this.state.burgerPrice - subtractedPrice;\n        this.setState({ingredients: ingredients, burgerPrice: totalPrice});\n    }\n    //#endregion\n\n    render() {\n        //console.log('[BurgerBuilder.js] -> render() - 2');\n\n        const disabledInfo = {...this.state.ingredients};\n        for(let key in disabledInfo) {\n            if(disabledInfo[key] <= 0) {\n                disabledInfo[key] = true;\n            } else {\n                disabledInfo[key] = false;\n            }\n        }\n\n        return (\n          <Aux>\n            <Burger ingredients={this.state.ingredients} />\n            <BuildControls\n              removeIngredient={this.removeIngredientHandler}\n              addIngredient={this.addIngredientHandler}\n              disabledInfo={disabledInfo}\n              price={this.state.burgerPrice}\n              purchasable={this.state.purchasable}\n            />\n          </Aux>\n        );\n    }\n\n    componentDidMount() {\n        //console.log('[BurgerBuilder.js] -> componentDidMount() - 3');\n    }\n\n    shouldComponentUpdate(prevProps, prevState) {\n        //console.log('[BurgerBuilder.js] shouldComponentUpdate()');\n        //console.log(prevProps);\n        return true;\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}